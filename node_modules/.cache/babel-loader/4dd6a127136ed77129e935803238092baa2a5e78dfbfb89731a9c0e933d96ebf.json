{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      items: [{\n        name: 'Office Slacks',\n        price: 229\n      }, {\n        name: 'Mini Fan',\n        price: 220\n      }, {\n        name: 'Wireless Mouse',\n        price: 135\n      }]\n    };\n  },\n  methods: {\n    addToCart(item) {\n      this.$emit('add-to-cart', item);\n    },\n    updateItem(index) {\n      const item = this.items[index];\n      const newName = prompt('Enter the new name:', item.name);\n      const newPrice = parseFloat(prompt('Enter the new price:', item.price));\n      if (newName && !isNaN(newPrice)) {\n        item.name = newName;\n        item.price = newPrice;\n      }\n    },\n    removeItem(index) {\n      this.items.splice(index, 1);\n    },\n    addItem() {\n      const name = prompt('Enter the name for the new item:');\n      const price = parseFloat(prompt('Enter the price for the new item:'));\n      if (name && !isNaN(price)) {\n        this.items.push({\n          name,\n          price\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","items","name","price","methods","addToCart","item","$emit","updateItem","index","newName","prompt","newPrice","parseFloat","isNaN","removeItem","splice","addItem","push"],"sources":["D:\\Vue Playground\\shopping_cart\\src\\components\\ItemList.vue"],"sourcesContent":["<template>\n  <div class=\"btn-add-group\">\n    <button @click=\"addItem\" class=\"btn-add\">Add New Item</button>\n  </div>\n\n  <div class=\"list\">\n    <div v-for=\"(item, index) in items\" :key=\"index\" class=\"items\">\n      <div class=\"details\">\n        <p class=\"name\"><span>Name:</span> {{ item.name }}</p>\n        <p class=\"price\"><span>Quantity:</span> â‚±{{ item.price }}</p>\n      </div>\n      <div class=\"btn-group\">\n        <button @click=\"addToCart(item)\" class=\"btn-add-to-cart\">Add to Cart</button>\n        <button @click=\"updateItem(index)\" class=\"btn-update\">Update</button>\n        <button @click=\"removeItem(index)\" class=\"btn-remove\">Remove</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      items: [\n        { name: 'Office Slacks', price: 229 },\n        { name: 'Mini Fan', price: 220 },\n        { name: 'Wireless Mouse', price: 135 },\n      ]\n    };\n  },\n  methods: {\n    addToCart(item) {\n      this.$emit('add-to-cart', item);\n    },\n    updateItem(index) {\n      const item = this.items[index];\n      const newName = prompt('Enter the new name:', item.name);\n      const newPrice = parseFloat(prompt('Enter the new price:', item.price));\n      \n      if (newName && !isNaN(newPrice)) {\n        item.name = newName;\n        item.price = newPrice;\n      }\n    },\n    removeItem(index) {\n      this.items.splice(index, 1);\n    },\n    addItem() {\n      const name = prompt('Enter the name for the new item:');\n      const price = parseFloat(prompt('Enter the price for the new item:'));\n      \n      if (name && !isNaN(price)) {\n        this.items.push({ name, price });\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.btn-add-group {\n    text-align: right;\n    margin-bottom: 20px;\n}\n\n.btn-add {\n    background-color: #007bff;\n    color: #fff;\n    border: 1px solid #007bff;\n    padding: 8px 16px;\n    border-radius: 4px;\n    cursor: pointer;\n}\n\n.btn-add:hover {\n    background-color: #0056b3;\n    border-color: #0056b3;\n}\n\n\n.btn-add-to-cart {\n  color: #fff;\n  padding: 5px 5px;\n  cursor: pointer;\n  background-color: #2bff00;\n  border: 1px solid #2bff00;\n}\n\n.btn-add-to-cart:hover {\n    background-color: #06b300;\n    border-color: #06b300;\n}\n\n.btn-update {\n  color: #fff;\n  padding: 5px 5px;\n  cursor: pointer;\n  background-color: #e1ff00;\n  border: 1px solid #e1ff00;\n}\n\n.btn-update:hover {\n    background-color: #aab300;\n    border-color: #aab300;\n}\n\n.list {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); \n  gap: 20px;\n}\n\n.items {\n  border: 1px solid #000;\n  border-radius: 20px;\n  padding: 10px;\n}\n\nspan {\n  font-weight: bold;\n}\n</style>\n"],"mappings":";AAqBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,eAAe;QAAEC,KAAK,EAAE;MAAI,CAAC,EACrC;QAAED,IAAI,EAAE,UAAU;QAAEC,KAAK,EAAE;MAAI,CAAC,EAChC;QAAED,IAAI,EAAE,gBAAgB;QAAEC,KAAK,EAAE;MAAI,CAAC;IAE1C,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAACC,IAAI,EAAE;MACd,IAAI,CAACC,KAAK,CAAC,aAAa,EAAED,IAAI,CAAC;IACjC,CAAC;IACDE,UAAUA,CAACC,KAAK,EAAE;MAChB,MAAMH,IAAG,GAAI,IAAI,CAACL,KAAK,CAACQ,KAAK,CAAC;MAC9B,MAAMC,OAAM,GAAIC,MAAM,CAAC,qBAAqB,EAAEL,IAAI,CAACJ,IAAI,CAAC;MACxD,MAAMU,QAAO,GAAIC,UAAU,CAACF,MAAM,CAAC,sBAAsB,EAAEL,IAAI,CAACH,KAAK,CAAC,CAAC;MAEvE,IAAIO,OAAM,IAAK,CAACI,KAAK,CAACF,QAAQ,CAAC,EAAE;QAC/BN,IAAI,CAACJ,IAAG,GAAIQ,OAAO;QACnBJ,IAAI,CAACH,KAAI,GAAIS,QAAQ;MACvB;IACF,CAAC;IACDG,UAAUA,CAACN,KAAK,EAAE;MAChB,IAAI,CAACR,KAAK,CAACe,MAAM,CAACP,KAAK,EAAE,CAAC,CAAC;IAC7B,CAAC;IACDQ,OAAOA,CAAA,EAAG;MACR,MAAMf,IAAG,GAAIS,MAAM,CAAC,kCAAkC,CAAC;MACvD,MAAMR,KAAI,GAAIU,UAAU,CAACF,MAAM,CAAC,mCAAmC,CAAC,CAAC;MAErE,IAAIT,IAAG,IAAK,CAACY,KAAK,CAACX,KAAK,CAAC,EAAE;QACzB,IAAI,CAACF,KAAK,CAACiB,IAAI,CAAC;UAAEhB,IAAI;UAAEC;QAAM,CAAC,CAAC;MAClC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}